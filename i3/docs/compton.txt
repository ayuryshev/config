compton (v0.1_beta2.5)
usage: compton [options]
Options:

-d display
  Which display should be managed.

-r radius
  The blur radius for shadows. (default 12)

-o opacity
  The translucency for shadows. (default .75)

-l left-offset
  The left offset for shadows. (default -15)

-t top-offset
  The top offset for shadows. (default -15)

-I fade-in-step
  Opacity change between steps while fading in. (default 0.028)

-O fade-out-step
  Opacity change between steps while fading out. (default 0.03)

-D fade-delta-time
  The time between steps in a fade in milliseconds. (default 10)

-m opacity
  The opacity for menus. (default 1.0)

-c
  Enabled client-side shadows on windows.

-C
  Avoid drawing shadows on dock/panel windows.

-z
  Zero the part of the shadow's mask behind the window.

-f
  Fade windows in/out when opening/closing and when opacity
  changes, unless --no-fading-openclose is used.

-F
  Equals to -f. Deprecated.

-i opacity
  Opacity of inactive windows. (0.1 - 1.0)

-e opacity
  Opacity of window titlebars and borders. (0.1 - 1.0)

-G
  Don't draw shadows on DND windows

-b
  Daemonize process.

-S
  Enable synchronous operation (for debugging).

--show-all-xerrors
  Show all X errors (for debugging).

--config path
  Look for configuration file at the path. Use /dev/null to avoid
  loading configuration file.

--write-pid-path path
  Write process ID to a file.

--shadow-red value
  Red color value of shadow (0.0 - 1.0, defaults to 0).

--shadow-green value
  Green color value of shadow (0.0 - 1.0, defaults to 0).

--shadow-blue value
  Blue color value of shadow (0.0 - 1.0, defaults to 0).

--inactive-opacity-override
  Inactive opacity set by -i overrides value of _NET_WM_OPACITY.

--inactive-dim value
  Dim inactive windows. (0.0 - 1.0, defaults to 0)

--active-opacity opacity
  Default opacity for active windows. (0.0 - 1.0)

--mark-wmwin-focused
  Try to detect WM windows and mark them as active.

--shadow-exclude condition
  Exclude conditions for shadows.

--fade-exclude condition
  Exclude conditions for fading.

--mark-ovredir-focused
  Mark windows that have no WM frame as active.

--no-fading-openclose
  Do not fade on window open/close.

--no-fading-destroyed-argb
  Do not fade destroyed ARGB windows with WM frame. Workaround of bugs
  in Openbox, Fluxbox, etc.

--shadow-ignore-shaped
  Do not paint shadows on shaped windows. (Deprecated, use
  --shadow-exclude 'bounding_shaped' or
  --shadow-exclude 'bounding_shaped && !rounded_corners' instead.)

--detect-rounded-corners
  Try to detect windows with rounded corners and don't consider
  them shaped windows. Affects --shadow-ignore-shaped,
  --unredir-if-possible, and possibly others. You need to turn this
  on manually if you want to match against rounded_corners in
  conditions.

--detect-client-opacity
  Detect _NET_WM_OPACITY on client windows, useful for window
  managers not passing _NET_WM_OPACITY of client windows to frame
  windows.

--refresh-rate val
  Specify refresh rate of the screen. If not specified or 0, compton
  will try detecting this with X RandR extension.

--vsync vsync-method
  Set VSync method. There are (up to) 5 VSync methods currently
  available:
    none = No VSync
    drm = VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some
      (DRI-based) drivers.
    opengl = Try to VSync with SGI_video_sync OpenGL extension. Only
      work on some drivers.
    opengl-oml = Try to VSync with OML_sync_control OpenGL extension.
      Only work on some drivers.
    opengl-swc = Try to VSync with SGI_swap_control OpenGL extension.
      Only work on some drivers. Works only with GLX backend.
    opengl-mswc = Try to VSync with MESA_swap_control OpenGL
      extension. Basically the same as opengl-swc above, except the
      extension we use.

--vsync-aggressive
  Attempt to send painting request before VBlank and do XFlush()
  during VBlank. This switch may be lifted out at any moment.

--alpha-step val
  X Render backend: Step for pregenerating alpha pictures. 
  0.01 - 1.0. Defaults to 0.03.

--dbe
  Enable DBE painting mode, intended to use with VSync to
  (hopefully) eliminate tearing.

--paint-on-overlay
  Painting on X Composite overlay window.

--sw-opti
  Limit compton to repaint at most once every 1 / refresh_rate
  second to boost performance.

--use-ewmh-active-win
  Use _NET_WM_ACTIVE_WINDOW on the root window to determine which
  window is focused instead of using FocusIn/Out events.

--respect-prop-shadow
  Respect _COMPTON_SHADOW. This a prototype-level feature, which
  you must not rely on.

--unredir-if-possible
  Unredirect all windows if a full-screen opaque window is
  detected, to maximize performance for full-screen windows.

--unredir-if-possible-delay ms
  Delay before unredirecting the window, in milliseconds.
  Defaults to 0.

--unredir-if-possible-exclude condition
  Conditions of windows that shouldn't be considered full-screen
  for unredirecting screen.

--focus-exclude condition
  Specify a list of conditions of windows that should always be
  considered focused.

--inactive-dim-fixed
  Use fixed inactive dim value.

--detect-transient
  Use WM_TRANSIENT_FOR to group windows, and consider windows in
  the same group focused at the same time.

--detect-client-leader
  Use WM_CLIENT_LEADER to group windows, and consider windows in
  the same group focused at the same time. WM_TRANSIENT_FOR has
  higher priority if --detect-transient is enabled, too.

--blur-background
  Blur background of semi-transparent / ARGB windows. Bad in
  performance. The switch name may change without prior
  notifications.

--blur-background-frame
  Blur background of windows when the window frame is not opaque.
  Implies --blur-background. Bad in performance. The switch name
  may change.

--blur-background-fixed
  Use fixed blur strength instead of adjusting according to window
  opacity.

--blur-kern matrix
  Specify the blur convolution kernel, with the following format:
    WIDTH,HEIGHT,ELE1,ELE2,ELE3,ELE4,ELE5...
  The element in the center must not be included, it will be forever
  1.0 or changing based on opacity, depending on whether you have
  --blur-background-fixed.
  A 7x7 Gaussian blur kernel looks like:
    --blur-kern '7,7,0.000003,0.000102,0.000849,0.001723,0.000849,0.000102,0.000003,0.000102,0.003494,0.029143,0.059106,0.029143,0.003494,0.000102,0.000849,0.029143,0.243117,0.493069,0.243117,0.029143,0.000849,0.001723,0.059106,0.493069,0.493069,0.059106,0.001723,0.000849,0.029143,0.243117,0.493069,0.243117,0.029143,0.000849,0.000102,0.003494,0.029143,0.059106,0.029143,0.003494,0.000102,0.000003,0.000102,0.000849,0.001723,0.000849,0.000102,0.000003'
  Up to 4 blur kernels may be specified, separated with semicolon, for
  multi-pass blur.
  May also be one the predefined kernels: 3x3box (default), 5x5box,
  7x7box, 3x3gaussian, 5x5gaussian, 7x7gaussian, 9x9gaussian,
  11x11gaussian.

--blur-background-exclude condition
  Exclude conditions for background blur.

--resize-damage integer
  Resize damaged region by a specific number of pixels. A positive
  value enlarges it while a negative one shrinks it. Useful for
  fixing the line corruption issues of blur. May or may not
  work with --glx-no-stencil. Shrinking doesn't function correctly.

--invert-color-include condition
  Specify a list of conditions of windows that should be painted with
  inverted color. Resource-hogging, and is not well tested.

--opacity-rule opacity:condition
  Specify a list of opacity rules, in the format "PERCENT:PATTERN",
  like '50:name *= "Firefox"'. compton-trans is recommended over
  this. Note we do not distinguish 100% and unset, and we don't make
  any guarantee about possible conflicts with other programs that set
  _NET_WM_WINDOW_OPACITY on frame or client windows.

--shadow-exclude-reg geometry
  Specify a X geometry that describes the region in which shadow
  should not be painted in, such as a dock window region.
  Use --shadow-exclude-reg 'x10+0-0', for example, if the 10 pixels
  on the bottom of the screen should not have shadows painted on.

--xinerama-shadow-crop
  Crop shadow of a window fully on a particular Xinerama screen to the
  screen.

--backend backend
  Choose backend. Possible choices are xrender, glx, and
  xr_glx_hybrid.

--glx-no-stencil
  GLX backend: Avoid using stencil buffer. Might cause issues
  when rendering transparent content. My tests show a 15% performance
  boost.

--glx-copy-from-front
  GLX backend: Copy unmodified regions from front buffer instead of
  redrawing them all. My tests with nvidia-drivers show a 5% decrease
  in performance when the whole screen is modified, but a 30% increase
  when only 1/4 is. My tests on nouveau show terrible slowdown. Could
  work with --glx-swap-method but not --glx-use-copysubbuffermesa.

--glx-use-copysubbuffermesa
  GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
  My tests on nouveau shows a 200% performance boost when only 1/4 of
  the screen is updated. May break VSync and is not available on some
  drivers. Overrides --glx-copy-from-front.

--glx-no-rebind-pixmap
  GLX backend: Avoid rebinding pixmap on window damage. Probably
  could improve performance on rapid window content changes, but is
  known to break things on some drivers (LLVMpipe, xf86-video-intel,
  etc.).

--glx-swap-method undefined/copy/exchange/3/4/5/6/buffer-age
  GLX backend: GLX buffer swap method we assume. Could be
  undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
  "undefined" is the slowest and the safest, and the default value.
  1 is fastest, but may fail on some drivers, 2-6 are gradually slower
  but safer (6 is still faster than 0). -1 means auto-detect using
  GLX_EXT_buffer_age, supported by some drivers. Useless with
  --glx-use-copysubbuffermesa.

--glx-use-gpushader4
  GLX backend: Use GL_EXT_gpu_shader4 for some optimization on blur
  GLSL code. My tests on GTX 670 show no noticeable effect.

--xrender-sync
  Attempt to synchronize client applications' draw calls with XSync(),
  used on GLX backend to ensure up-to-date window content is painted.

--xrender-sync-fence
  Additionally use X Sync fence to sync clients' draw calls. Needed
  on nvidia-drivers with GLX backend for some users.

--glx-fshader-win shader
  GLX backend: Use specified GLSL fragment shader for rendering window
  contents.

--force-win-blend
  Force all windows to be painted with blending. Useful if you have a
  --glx-fshader-win that could turn opaque pixels transparent.

--dbus
  Enable remote control via D-Bus. See the D-BUS API section in the
  man page for more details.

--benchmark cycles
  Benchmark mode. Repeatedly paint until reaching the specified cycles.

--benchmark-wid window-id
  Specify window ID to repaint in benchmark mode. If omitted or is 0,
  the whole screen is repainted.
